service: s3-file-api

 provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  region: as-east-1
  apiNmae: ${self:service}
  memorySize: 128
  timeout: 10
  enviroment:
    FILE_UPLOAD_BUCKET_NAME: ${self:custom.fileBucketName}
plugins:
  -serverless-iam-roles-per-function

  custom:
    fileBucketName: s3-file-bucket-practice-${self:provider.stage}

functions:
  s3FileUploader:
    handler: src/upload.handler
    name: s3-file-uploader
    events:
      -http:
        path: file
        method: POST
    iamRoleStatements:
      -Effect: Allow
        Action:
          -"s3:Put*"
        Resource: arn:aws:s3:::${self:custom.fileBucketName}/*
  s3FileGet:
    handler: src/get.handler
    name: s3-file-get
    events:
      -http:
        path: file/{fileKey}
        method: GET
    iamRoleStatements:
      -Effect: Allow
        Action:
          -"s3:Get*"
        Resource: arn:aws:s3:::${self:custom.fileBucketName}/*
  s3FileDelete:
    handler: src/delete.handler
    name: s3-file-delete
    events:
      -http:
        path: file/{fileKey}
        method: DELETE
    iamRoleStatements:
      -Effect: Allow
        Action:
          -"s3:DeleteObject"
        Resource: arn:aws:s3:::${self:custom.fileBucketName}/*
  resources:
    Resources:
      FileBucket:
        Type: AWS::S3::Bucket
          Properties:
          BucketName: ${self:custom.fieBucketName}
          AccessControl: Private